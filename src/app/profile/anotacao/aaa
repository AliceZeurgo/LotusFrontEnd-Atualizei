   {/* MODAL */}
   {isModalOpen && (
    <div className="fixed inset-0 flex items-center justify-center z-50 bg-transparent">
      <div className="bg-white p-8 rounded-md max-w-4xl w-full relative">
        <button onClick={toggleModal} className="absolute top-4 right-4">
          <span className="text-gray-500">X</span>
        </button>
  
        <div className="flex items-start">
          
          <div className="mr-8">
            <label 
              htmlFor="fileInput" 
              className="border-gray-2 border-1 w-48 h-48 rounded-[25px] flex items-center justify-center cursor-pointer bg-gray-2"
              style={{
                backgroundImage: selectedImage ? `url(${selectedImage})` : 'none',
                backgroundSize: 'cover',
                backgroundPosition: 'center',
              }}
            >
              {!selectedImage && <span>Adicionar foto</span>}
            </label>
  
            <input
              id="fileInput"
              type="file"
              accept="image/*"
              onChange={handleImageChange}
              className="hidden" // Esconde o input de arquivo
            />
          </div>
  
          <div className="flex-grow">
  
            {/* Input de CPF */}
            <div className="mb-4">
              <label className="block mb-1">CPF</label>
              <input
                type="text"
                value={cpf}
                onChange={(e) => setCpf(e.target.value)}
                className="border p-2 rounded-lg w-full"
                placeholder="Insira o CPF"
              />
            </div>
  
            <div className="mb-4">
              <label className="block mb-1">Tempo como Doula</label>
              <input
                type="text"
                value={yearsAsDoula}
                onChange={(e) => setYearsAsDoula(e.target.value)}
                className="border p-2 rounded-lg w-full"
                placeholder="Insira o tempo como Doula"
              />
            </div>
  
            <div className="mb-4">
              <label className="block mb-1">Descrição</label>
              <textarea
                value={description}
                onChange={(e) => setDescription(e.target.value)}
                className="border p-2 rounded-lg w-full"
                placeholder="Insira uma descrição"
              />
            </div>
  
            <div className="mb-4">
              <label className="block mb-1">Especialização</label>
              <div className="flex flex-wrap gap-2">
                {specializationOptions.map((option, index) => (
                  <label key={index} className="flex items-center space-x-2">
                    <input
                      type="checkbox"
                      checked={selectedSpecializations.includes(option)}
                      onChange={() => handleSpecializationChange(option)}
                    />
                    <span>{option}</span>
                  </label>
                ))}
              </div>
            </div>
  
            <button onClick={handleSave} className="bg-pink-3 text-white rounded-lg p-2 w-full">
              Salvar
            </button>
          </div>
        </div>
      </div>
    </div>
  )}